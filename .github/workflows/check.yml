on: push

jobs:
  check:
    name: Check if openslide works
    strategy:
      matrix:
        platform: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with: 
          repo: alanocallaghan/openslide-winbuild
          workflow: main.yml
          name: openslide-build-.*
          name_is_regexp: true
      - name: Unpack
        shell: bash
        run: |
          if [ "${{matrix.platform}}" == "ubuntu-latest" ]; then
            tar -xvf openslide-build-main/openslide-build-main/openslide-linux-x86_64-main.tar.gz
            echo "JNAPATH=$PWD/openslide-linux-x86_64-main/lib/" >> $GITHUB_ENV
          elif [ "${{matrix.platform}}" == "macos-latest" ]; then
            tar -xvf openslide-build-main/openslide-build-main/openslide-mac-x86_64-main.tar.gz
            echo "JNAPATH=$PWD/openslide-mac-x86_64-main/lib/" >> $GITHUB_ENV
          elif [ "${{matrix.platform}}" == "windows-latest" ]; then
            unzip openslide-build-main/openslide-build-main/openslide-win-x86_64-main.zip
            echo "JNAPATH=$PWD/openslide-win-x86_64-main/lib/" >> $GITHUB_ENV
          fi
      - name: Copy bin/libopenslide.dll to lib/openslide.dll
        if: matrix.platform == 'windows-latest'
        shell: bash
        run: |
          cp openslide-win-x86_64-main/bin/libopenslide-0.dll openslide-win-x86_64-main/lib/openslide.dll
      - name: Run with Gradle
        shell: bash
        run: ./gradlew run --args="CMU-1-Small-Region.tiff"
